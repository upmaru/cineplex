stages:
  - test
  - build
  - deploy

variables:
  REPODEST: /home/builder/packages/${CI_COMMIT_REF_NAME}
  PACKAGE_DEST: /home/builder/packages/${CI_COMMIT_REF_NAME}/${CI_PROJECT_NAMESPACE}/
  GCS_DEST: gs://packages.apk.build/${CI_COMMIT_REF_NAME}/${CI_PROJECT_NAMESPACE}/
  GIT_STRATEGY: fetch


test_server:
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - _build
      - deps

  stage: test
  tags:
    - gcp
    - postgresql
    - redis
    - apk

  variables:
    CINEPLEX_ROLE: server

  script:
    - "cd .apk/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
    - "abuild check"
  


build:
  stage: build
  tags:
    - gcp
    - apk
  only:
    refs:
      - master
      - develop
  script:
    - "rm -rf ${PACKAGE_DEST}"
    - "mkdir -p ${PACKAGE_DEST}"
    - "cd .apk/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
    - "gsutil -m rsync -r ${GCS_DEST} ${PACKAGE_DEST}"
    - "abuild snapshot"
    - "abuild -r"
    - "abuild cleanoldpkg"
    - "gsutil -m rsync -r -d ${PACKAGE_DEST} ${GCS_DEST}"

.terraform: &terraform
  stage: deploy
  tags:
    - gcp
  variables:
    DEPLOY_MARKER_URL: https://push.appsignal.com/1/markers?api_key=${APPSIGNAL_API_KEY}&name=${APPSIGNAL_APP_NAME}&environment=${CI_ENVIRONMENT_SLUG}
    DEPLOY_MARKER_DATA: |
      {
        "revision": "${CI_COMMIT_SHA}",
        "user": "${GITLAB_USER_NAME}", 
        "repository": "${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
      }

  script:
    - terraform init
    - terraform workspace select ${CI_ENVIRONMENT_SLUG}
    - terraform plan -out=tfplan -var app_version="$(git describe --tags --always)"
    - terraform apply -auto-approve -var app_version="$(git describe --tags --always)"
    - "curl -v \"${DEPLOY_MARKER_URL}\" -H 'Content-Type: application/json' -d \"${DEPLOY_MARKER_DATA}\""

deploy_staging:
  <<: *terraform
  only:
    refs:
      - develop
  stage: deploy
  environment:
    name: staging

deploy_production:
  <<: *terraform
  only:
    refs:
      - master
  stage: deploy
  environment:
    name: production

